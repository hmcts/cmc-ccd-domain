buildscript {
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.25'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'checkstyle'
    id 'java-library'
    id 'jacoco'
    id 'com.jfrog.bintray' version "1.8.4"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.1.3.RELEASE' apply false
    id 'org.owasp.dependencycheck' version '5.2.2'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'org.sonarqube' version '3.0'
}

def fileVersion = new org.yaml.snakeyaml.Yaml().load(new File("VERSION.yaml").newInputStream())

group = 'uk.gov.hmcts.reform'
version = fileVersion.TAG

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    maven { url "http://dl.bintray.com/hmcts/hmcts-maven/" }
    mavenLocal()
    jcenter()
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

checkstyle {
  maxWarnings = 50
  toolVersion = '8.14'
}

task printVersion {
    doLast {
        print project.version
    }
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/cmc-ccd-domain"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Domain associated with money claim in ccd')
                root.appendNode('name', 'Money Claim CCD Domain')
                root.appendNode('url', 'https://github.com/hmcts/cmc-ccd-domain')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = project.name
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hmcts/cmc-ccd-domain'
        version {
            name = project.version
        }
    }
}
